# run:
#   concurrency: 4

#   timeout: 1m

#   issues-exit-code: 1

#   tests: true

#   build-tags:
#     - mytag

#   skip-dirs:
#     - src/external_libs
#     - autogenerated_by_my_lib

#   skip-dirs-use-default: true

#   skip-files:
#     - ".*\\.my\\.go$"
#     - lib/bad.go

#   modules-download-mode: readonly|vendor|mod

#   allow-parallel-runners: false


# output:
#   format: colored-line-number

#   print-issued-lines: true

#   print-linter-name: true

#   uniq-by-line: true

#   path-prefix: ""

#   sort-results: false


# linters-settings:
#   # bidichk:

#   #   left-to-right-embedding: true
#   #   right-to-left-embedding: true
#   #   pop-directional-formatting: true
#   #   left-to-right-override: true
#   #   right-to-left-override: true
#   #   left-to-right-isolate: true
#   #   right-to-left-isolate: true
#   #   first-strong-isolate: true
#   #   pop-directional-isolate: true

#   # cyclop:
#   #   max-complexity: 10
#   #   package-average: 0.0
#   #   skip-tests: false

#   # dogsled:
#   #   max-blank-identifiers: 2

#   # dupl:
#   #   threshold: 100

#   # errcheck:
#   #   check-type-assertions: false
#   #   check-blank: false

#   #   ignore: fmt:.*,io/ioutil:^Read.*

#   #   exclude: /path/to/file.txt

#   #   exclude-functions:
#   #     - io/ioutil.ReadFile
#   #     - io.Copy(*bytes.Buffer)
#   #     - io.Copy(os.Stdout)

#   # errchkjson:
#   #   check-error-free-encoding: false
    
#   #   report-no-exported: false

#   # errorlint:
#   #   errorf: true
#   #   asserts: true
#   #   comparison: true

#   # exhaustive:
#   #   check-generated: false
#   #   default-signifies-exhaustive: false
#   #   ignore-enum-members: ""
#   #   package-scope-only: false

#   # exhaustivestruct:
#   #   struct-patterns:
#   #     - '*.Test'
#   #     - 'example.com/package.ExampleStruct'

#   # forbidigo:
#   #   forbid:
#   #     - ^print.*$
#   #     - 'fmt\.Print.*'
#   #   exclude_godoc_examples: false

#   # funlen:
#   #   lines: 60
#   #   statements: 40

#   # gci:
#   #   local-prefixes: github.com/org/project

#   # gocognit:
#   #   min-complexity: 10

#   # goconst:
#   #   min-len: 3
#   #   min-occurrences: 3
#   #   ignore-tests: false
#   #   match-constant: true
#   #   numbers: false
#   #   min: 3
#   #   max: 3
#   #   ignore-calls: true

#   # gocritic:
#   #   enabled-checks:
#   #     - nestingReduce
#   #     - unnamedresult
#   #     - ruleguard
#   #     - truncateCmp

#   #   disabled-checks:
#   #     - regexpMust

#   #   enabled-tags:
#   #     - performance
#   #   disabled-tags:
#   #     - experimental

#   #   settings:
#   #     captLocal: 
#   #       paramsOnly: true
#   #     elseif:
#   #       skipBalanced: true
#   #     hugeParam:
#   #       sizeThreshold: 80
#   #     nestingReduce:
#   #       bodyWidth: 5
#   #     rangeExprCopy:
#   #       sizeThreshold: 512
#   #       skipTestFuncs: true
#   #     rangeValCopy:
#   #       sizeThreshold: 32
#   #       skipTestFuncs: true
#   #     ruleguard:
#   #       debug: 'emptyDecl'
#   #       failOnError: false
#   #       failOn: dsl
#   #       rules: '${configDir}/ruleguard/rules-*.go,${configDir}/myrule1.go'
#   #     tooManyResultsChecker:
#   #       maxResults: 10
#   #     truncateCmp:
#   #       skipArchDependent: true
#   #     underef:
#   #       skipRecvDeref: true
#   #     unnamedResult:
#   #       checkExported: true

#   # gocyclo:
#   #   min-complexity: 10

#   # godot:
#   #   scope: declarations
#   #   exclude:
#   #   capital: false

#   # godox:
#   #   keywords:
#   #     - NOTE
#   #     - OPTIMIZE 
#   #     - HACK 

#   gofmt:
#     simplify: true

#   gofumpt:
#     lang-version: "1.17"
#     extra-rules: false

#   # goheader:
#   #   values:
#   #     const:
#   #     regexp:
#   #   template: 
#   #   template-path:
     
#   goimports:
#     local-prefixes: github.com/org/project

#   golint:
#     min-confidence: 0.8

#   gomnd:
#     settings:
#       mnd:
#         checks: argument,case,condition,operation,return,assign

#   # gomoddirectives:
#   #   replace-local: false
#   #   replace-allow-list:
#   #     - launchpad.net/gocheck
#   #   retract-allow-no-explanation: false
#   #   exclude-forbidden: false

#   gomodguard:
#     allowed:
#       modules:                                                        # List of allowed modules
#       domains:                                                        # List of allowed module domains
#       blocked:
#       modules:                                                        # List of blocked modules
#       versions:                                                       # List of blocked module version constraints
#       local_replace_directives: false                                 # Set to true to raise lint issues for packages that are loaded from a local path via replace directive

#   gosec:
#     includes:
#       - G401
#       - G306
#       - G101
    
#     excludes:
#       - G204
#     exclude-generated: true
#     severity: "low"
#     confidence: "low"
#     config:
#       G306: "0600"
#       G101:
#         pattern: "(?i)example"
#         ignore_entropy: false
#         entropy_threshold: "80.0"
#         per_char_threshold: "3.0"
#         truncate: "32"

#   gosimple:
#     go: "1.17"
#     checks: [ "all" ]

#   govet:
#     check-shadowing: true
#     settings:
#       printf: # analyzer name, run `go tool vet help` to see all analyzers
#         funcs: # run `go tool vet help printf` to see available settings for `printf` analyzer
#           - (github.com/golangci/golangci-lint/pkg/logutils.Log).Infof
#           - (github.com/golangci/golangci-lint/pkg/logutils.Log).Warnf
#           - (github.com/golangci/golangci-lint/pkg/logutils.Log).Errorf
#           - (github.com/golangci/golangci-lint/pkg/logutils.Log).Fatalf
#     # enable:
#     #   - atomicalign
#     enable-all: true
#     disable:
#       - shadow
#     disable-all: false

#   depguard:
#     list-type: blacklist
#     include-go-root: false
#     packages:
#       - github.com/sirupsen/logrus
#     packages-with-error-message:
#       - github.com/sirupsen/logrus: "logging is allowed only by logutils.Log"

#   ifshort:
#     max-decl-lines: 1
#     max-decl-chars: 30

#   importas:
#     no-unaliased: true
#     alias:
#       - pkg: knative.dev/serving/pkg/apis/serving/v1
#         alias: servingv1
#       - pkg: knative.dev/serving/pkg/apis/autoscaling/v1alpha1
#         alias: autoscalingv1alpha1
#       - pkg: knative.dev/serving/pkg/apis/(\w+)/(v[\w\d]+)
#         alias: $1$2

#   ireturn:
    
#     allow:
#     - anon
#     - error
#     - empty
#     - stdlib
    
#     - (or|er)$

   
#     reject:
#     - github.com\/user\/package\/v4\.Type

#   lll:
  
#     line-length: 120
  
#     tab-width: 1

#   makezero:
    
#     always: false

#   maligned:
    
#     suggest-new: true

#   misspell:
    
#     locale: US
#     ignore-words:
#       - someword

#   nakedret:
   
#     max-func-lines: 30

#   nestif:
    
#     min-complexity: 4

#   nilnil:
    
#     checked-types:
#       - ptr
#       - func
#       - iface
#       - map
#       - chan

#   nlreturn:
#     block-size: 1

#   nolintlint:
    
#     allow-unused: false
    
#     allow-leading-space: true
    
#     allow-no-explanation: [ ]
    
#     require-explanation: true
    
#     require-specific: true

#   prealloc:
#     simple: true
#     range-loops: true # Report preallocation suggestions on range loops, true by default
#     for-loops: false # Report preallocation suggestions on for loops, false by default

#   promlinter:
#     strict: false
#     disabled-linters:

#   predeclared:
#     ignore: ""
#     q: false

#   rowserrcheck:
#     packages:
#       - github.com/jmoiron/sqlx

#   revive:
#     ignore-generated-header: true
#     severity: warning
#     rules:
#       - name: indent-error-flow
#         severity: warning
#       - name: add-constant
#         severity: warning
#         arguments:
#           - maxLitCount: "3"
#             allowStrs: '""'
#             allowInts: "0,1,2"
#             allowFloats: "0.0,0.,1.0,1.,2.0,2."

#   staticcheck:
#     go: "1.17"
#     checks: [ "all" ]

#   stylecheck:
#     go: "1.17"
#     checks: [ "all", "-ST1000", "-ST1003", "-ST1016", "-ST1020", "-ST1021", "-ST1022" ]
#     dot-import-whitelist:
#       - fmt
#     initialisms: [ "ACL", "API", "ASCII", "CPU", "CSS", "DNS", "EOF", "GUID", "HTML", "HTTP", "HTTPS", "ID", "IP", "JSON", "QPS", "RAM", "RPC", "SLA", "SMTP", "SQL", "SSH", "TCP", "TLS", "TTL", "UDP", "UI", "GID", "UID", "UUID", "URI", "URL", "UTF8", "VM", "XML", "XMPP", "XSRF", "XSS" ]
#     http-status-code-whitelist: [ "200", "400", "404", "500" ]

#   tagliatelle:
#     case:
#       use-field-name: true
#       rules:
#         # any struct tag type can be used.
#         # support string case: `camel`, `pascal`, `kebab`, `snake`, `goCamel`, `goPascal`, `goKebab`, `goSnake`, `upper`, `lower`
#         json: camel
#         yaml: camel
#         xml: camel
#         bson: camel
#         avro: snake
#         mapstructure: kebab

#   testpackage:
#     skip-regexp: (export|internal)_test\.go

#   thelper: 
#     test:
#       first: true
#       name: true
#       begin: true
#     benchmark:
#       first: true
#       name: true
#       begin: true
#     tb:
#       first: true
#       name: true
#       begin: true

#   tenv:
#     all: false

#   unparam:
#     check-exported: false

#   unused:
#     go: "1.17"

#   varnamelen:
#     max-distance: 15
#     min-name-length: 3
#     check-receiver: false
#     check-return: false
#     ignore-type-assert-ok: false
#     ignore-map-index-ok: false
#     ignore-chan-recv-ok: false
#     ignore-names:
#       - err
#     ignore-decls:
#       - c echo.Context
#       - t testing.T
#       - f *foo.Bar
#       - e error
#       - i int
#       - const C

#   whitespace:
#     multi-if: false   # Enforces newlines (or comments) after every multi-line if statement
#     multi-func: false # Enforces newlines (or comments) after every multi-line function signature

#   wrapcheck:
#     ignoreSigs:
#       - .Errorf(
#       - errors.New(
#       - errors.Unwrap(
#       - .Wrap(
#       - .Wrapf(
#       - .WithMessage(
#       - .WithMessagef(
#       - .WithStack(
#     ignoreSigRegexps:
#       - \.New.*Error\(
#     ignorePackageGlobs:
#       - encoding/*
#       - github.com/pkg/*

#   wsl:
#     allow-assign-and-anything: false
#     allow-assign-and-call: true
#     allow-cuddle-declarations: false
#     allow-multiline-assign: true
#     allow-separated-leading-comment: false
#     allow-trailing-comment: false
#     force-case-trailing-whitespace: 0
#     force-err-cuddling: false
#     force-short-decl-cuddling: false
#     strict-append: true
  # custom:
  #    example:
  #     path: /path/to/example.so
  #     description: This is an example usage of a plugin linter.
  #     original-url: github.com/golangci/example-linter

linters:
  # disable-all: true
  # enable:
  #   - asciicheck
  #   - bidichk
  #   - bodyclose
  #   - contextcheck
  #   - cyclop
  #   - deadcode
  #   - depguard
  #   - dogsled
  #   - dupl
  #   - durationcheck
  #   - errcheck
  #   - errname
  #   - errorlint
  #   - exhaustive
  #   - exhaustivestruct
  #   - exportloopref
  #   - forbidigo
  #   - forcetypeassert
  #   - funlen
  #   - gci
  #   - gochecknoglobals
  #   - gochecknoinits
  #   - gocognit
  #   - goconst
  #   - gocritic
  #   - gocyclo
  #   - godot
  #   - godox
  #   - goerr113
  #   # - gofmt
  #   - gofumpt
  #   - goheader
  #   # - goimports
  #   - gomnd
  #   - gomoddirectives
  #   - gomodguard
  #   - goprintffuncname
  #   - gosec
  #   - gosimple
  #   - govet
  #   - ifshort
  #   - importas
  #   - ineffassign
  #   - ireturn
  #   - lll
  #   - makezero
  #   - misspell
  #   - nakedret
  #   - nestif
  #   - nilerr
  #   - nilnil
  #   - nlreturn
  #   - noctx
  #   - nolintlint
  #   - paralleltest
  #   - prealloc
  #   - predeclared
  #   - promlinter
  #   - revive
  #   # - rowserrcheck
  #   # - sqlclosecheck
  #   # - staticcheck
  #   # - structcheck
  #   # - stylecheck
  #   # - tagliatelle
  #   # - tenv
  #   # - testpackage
  #   # - thelper
  #   # - tparallel
  #   # - typecheck
  #   # - unconvert
  #   # - unparam
  #   # - unused
  #   # - varcheck
  #   # - varnamelen
  #   # - wastedassign
  #   # - whitespace
  #   # - wrapcheck
  #   # - wsl
  # #   - megacheck
  # #   - govet
  enable-all: true
  disable:
    - interfacer
    - scopelint
    - golint
    - maligned
    - gofmt
    - goimports
  # presets:
  #   - bugs
  #   - unused
  #   - complexity
  #   - error
  #   - format
  #   - import
  #   - metalinter
  #   - module
  #   - performance
  #   - style
  #   - test
  fast: false


issues:
  exclude:
    - abcdef
  exclude-rules:
    - path: _test\.go
      linters:
        - gocyclo
        - errcheck
        - dupl
        - gosec
    - path: internal/hmac/
      text: "weak cryptographic primitive"
      linters:
        - gosec
    - linters:
        - staticcheck
      text: "SA9003:"
    - linters:
        - lll
      source: "^//go:generate "
  exclude-use-default: false
  exclude-case-sensitive: false
  include:
    - EXC0002 # disable excluding of issues about comments from golint
  max-issues-per-linter: 0
  max-same-issues: 0
  new: false
  new-from-rev: REV
  new-from-patch: path/to/patch/file
  fix: true

severity:
  default-severity: error
  case-sensitive: false
  rules:
    - linters:
      - dupl
      severity: info